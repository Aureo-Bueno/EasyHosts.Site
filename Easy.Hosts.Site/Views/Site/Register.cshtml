@model Easy.Hosts.Site.Models.ViewModel.UserRegisterViewModel

@{
    ViewBag.Title = "Register";
}

<section class="banner_area">
    <div class="booking_table d_flex align-items-center">
        <div class="overlay bg-parallax " data-stellar-ratio="0.9" data-stellar-vertical-offset="0" data-background=""></div>
        <div class="container">
            <div class="banner_content text-center">
                <h6>Uma no experiência</h6>
                <h2>Crie sua conta</h2>
                <p>Preencha o formulário abaixo!</p>
            </div>
        </div>
    </div>
</section>

<section class="section-top-border">
    <div class="container">
        <div class="card" style="background: #f9f9ff;">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4 mt-5">
                        <img class="img-fluid" src="~/Content/image/logo.png" alt="img">
                    </div>
                    <div class="col-md-8 mt-5">
                        <div class="about_content">
                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()
                                <div class="row">
                                    <div class="col-lg-12 col-md-12">
                                        <h4 class="text-center">Criar Conta</h4>
                                        <hr class="bg-dark" />
                                    </div>
                                    <div class="col-md-12">
                                        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger text-center" })
                                    </div>
                                    <div class="col-md-6 input-group-icon mt-4">
                                        <div class="icon"><i class="fa fa-user-secret" aria-hidden="true"></i></div>
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "single-input", @placeholder = "Digite seu nome...", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="col-md-6 input-group-icon mt-4">
                                        @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "single-input", @placeholder = "Digite seu CPF (Apenas números)", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="col-md-12 input-group-icon mt-4">
                                        <div class="icon"><i class="fa fa-user" aria-hidden="true"></i></div>
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "single-input", @placeholder = "Digite seu e-mail...", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="col-md-6 input-group-icon mt-4 ">
                                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "single-input", @placeholder = "Digite sua senha...", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="col-md-6 input-group-icon mt-4">
                                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "single-input", @placeholder = "Confirme sua senha...", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-12 input-group-icon mt-3">
                                        <button class="btn d-block w-100 mt-3 book_now_btn button_hover" type="submit" name="submit">Criar Conta</button>
                                    </div>
                                </div>
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/Scripts/CustomValidation.js")
}